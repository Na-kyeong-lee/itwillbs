< 잘 할수 밖에 없는 방법들 >
1. 직접 코딩 한다.
  - 머리로 이해된다고 직접 코딩 X
    (건방진 유형) (초반에 잘하더라도 1달 지나면 똑같아짐)
  - 타자가 느리다고 직접 코딩 X
    (네이버 로그인)
  - 못하는게 쪽팔려서 옆 동기한테 보이니까...
    (모르는게 당연하니 쪽 팔릴 일이 X)
  - 프로그래밍 언어
    (문법은 알고 한문장 말한마디 제대로 못하는 영어와 같다!)
  - 강사 50 나머지 50은 직접 코딩하면서 깨우쳐야한다!

2. 필기하지마라!
  - 그 시간에 코딩
  - 따라치다보면 나도모르게 받아쓰기 하고있음.
  - 복습할때도 필기를 본다기 보다 코딩을 해야함!
  - 어짜피 공유해 드림 (그런데 어짜피 안봄)

3. 앞 자리에 앉는다.
  - 초반에는 어디 앉든 집중 잘함
  - 3개월쯤 지나면 나사 빠짐
  - 자바는 초반이 중요! 나머지 과목은 후반이 중요함!!
  
4. 네트워킹 (= 대인관계)
  - 언어이기 때문에 정답이 없다!
  - 서로의 코드를 공유하면서 다양한 표현방법을 익히게 된다.
    (같은 말인데 다양한 어휘, 어조로 표현할 수 있게된다!)
  - 주위에 추천할 개발자 없냐?
  - 계속 정보를 공유하면서 직접 경험하지 못한 언어,
    신기술 들을 간접적으로 알 수 있다.

5. DB가 굉장히 중요하다!
  - 프로그램을 개발하고 전산화 하는 이유는
    결국, 어떠한 데이터를 저장해 두었다가
    필요한 부분만 추출해서 확인하고
    정확한 의사결정을 하기위해서다!
    (웹개발, AI, 빅데이터, 블록체인 등등 전부다!!)

  - 프로그래밍적으로 생각하는 사고력은 조금만 시간지나면
    금방 습득할 수 있음 그리고, 다른과목은 실무와 어느정도 비슷하게 배울 수 있음

  - DB는 데이터가 있어야 공부가 가능
    실무 데이터를 훔쳐올 수도없고... 
  - 데이터가 없기 때문에 독학도 안된다.
  - DB 공부 사이트나 유튜브도 없다.
    (있더라도 와닿지가 않는다. =>데이터가 없으니까...)
  - 즉, 센터에서 밖에 공부할 수 없다!

6. 모든 개발은 결국 "디버깅" 이다.
  - 오류가 발생했을 때 원인을 다 알려준다
  - 이때, 어느 위치에서 어떤 상황일때 오류가 발생하는지 궁금??
    "디버깅" 을 통해 오류를 해결!
  - 똑똑한 사람만 코딩하는게 아니구나...
  - java, jsp, html, DB 모두 "디버깅" 이 중요하다!

7. 구글링
  - 너무 많은 기술들이 있다. (수업시간에 모두 다룰 수 없다)
  - 다 외울 수 없다 (실제로도 그때 그때 찾아가면서 일한다.)
  - 적당한 키워드로 검색해서 정확한 정보를 빨리 찾아서
    해결하는 것 또한 능력!!!
  - 전세계 모든 사람들의 다양한 해결방법, 다양한 표현방법을 알게됨
  - 막히면 강사만 찾는 사람. (수업 내용만 알게됨)

8. 과감한 복붙
  - 구글링 -> 과감한 복붙 -> 내 프로젝트에 맞게 수정(응용)
   -> 수정과정에서 다양한 에러를 만난다. (경험이 많아짐)
   -> 완성 (다 이해함)

9. 왜? 라는 질문을 던져야 한다.
  - 구글링해서 복붙한 내용이 어떻게 되는지 결국에는
    100% 알아야 내것이 된다.

10. 팀프로젝트
  - 조장을 맡아라. (or 조장을 많이 도와라)
    1. 전체적인 프로젝트 흐름을 파악할 수 있음
    2. 정말 다양한 오류를 경험하게됨 (조원들꺼 까지)
    3. 협업하는 과정에 어떤 어려움이 있는지
       뻐져리게 느낄 수 있음.
    4. 질문 즉, 고민하는 퀄리티가 다름
             => 면접질문: "프로젝트 하면서 힘든거 없었나요?"
	     => 문제없이 잘 해결했습니다! (숟가락 얹엇나??)
	     => 이런 에러를 만나서 결국 해결하지 못했습니다...
                       (지가 다했네??)



















  














