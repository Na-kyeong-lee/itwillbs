OOP is APIE

1. E (Encapsulation = 캡슐화)
  - 객체 내부 구조를 숨기고(은닉), 메서드를 통해 메세지만으로
    데이터를 주고 받는 것
  - 클래스 내의 멤버변수 접근제한자를 private 으로 선언하여 외부 접근을 제한하고
    Getter/Setter 메서드를 정의하여 간접적으로 데이터를 주고 받도록 하는것
    => 이때, Getter/Setter 는 누구나 접근 가능하도록 public 접근제한자 적용

2. I (Inheritance = 상속)
 - 슈퍼클래스의 멤버를 서브클래스에서 물려받아 선언없이 사용 가능하게 하는 것
 - 서브클래스 정의 시 서브클래스명 뒤에 extends 를 명시하고
     슈퍼클래스의 이름을 extends 뒤에 명시함
 - 상속의 장점 : 코드 중복 제거, 코드의 재사용성 향상됨

3. P (Polymorphism = 다형성)
 - 상속 관계에 있는 클래스 중 슈퍼클래스 타입으로 여러 서브클래스 인스턴스를 참조
   => 하나의 레퍼런스로 여러 인스턴스를 다루는 것
 - 서브클래스 -> 슈퍼클래스로 변환 : 업캐스팅(참조 영역 축소됨)
   슈퍼클래스 -> 서브클래스로 변환 : 다운캐스팅(참조 영역 확대됨)
 - 다형성을 통해 하나의 참조변수로 여러 인스턴스를 다룰 수 있으므로
   코드의 통일성이 향상됨

4. A (Abstraction = 추상화)
 - 대상 클래스(객체)의 공통점을 추출하여 상위 클래스를 정의하는 것